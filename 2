TheTransmissionControlProtocol(TCP)isoneofthemainprotocolsoftheInternetprotocolsuite.ItoriginatedintheinitialnetworkimplementationinwhichitcomplementedtheInternetProtocol(IP).Therefore,theentiresuiteiscommonlyreferredtoasTCP/IP.TCPprovidesreliable,ordered,anderror-checkeddeliveryofastreamofoctets(bytes)betweenapplicationsrunningonhostscommunicatingbyanIPnetwork.MajorInternetapplicationssuchastheWorldWideWeb,email,remoteadministration,andfiletransferrelyonTCP.ApplicationsthatdonotrequirereliabledatastreamservicemayusetheUserDatagramProtocol(UDP),whichprovidesaconnectionlessdatagramservicethatemphasizesreducedlatencyoverreliability.
DuringMay1974,theInstituteofElectricalandElectronicEngineers(IEEE)publishedapapertitledAProtocolforPacketNetworkIntercommunication.[1]Thepaper'sauthors,VintCerfandBobKahn,describedaninternetworkingprotocolforsharingresourcesusingpacketswitchingamongthenodes,incorporatingconceptsfromtheFrenchCYCLADESprojectdirectedbyLouisPouzin.[2]AcentralcontrolcomponentofthismodelwastheTransmissionControlProgramthatincorporatedbothconnection-orientedlinksanddatagramservicesbetweenhosts.ThemonolithicTransmissionControlProgramwaslaterdividedintoamodulararchitectureconsistingoftheTransmissionControlProtocolattheconnection-orientedlayerandtheInternetProtocolattheinternetworking(datagram)layer.ThemodelbecameknowninformallyasTCP/IP,althoughformallyitwashenceforthtermedtheInternetProtocolSuite.
TheTransmissionControlProtocolprovidesacommunicationserviceatanintermediatelevelbetweenanapplicationprogramandtheInternetProtocol.Itprovideshost-to-hostconnectivityattheTransportLayeroftheInternetmodel.Anapplicationdoesnotneedtoknowtheparticularmechanismsforsendingdataviaalinktoanotherhost,suchastherequiredpacketfragmentationonthetransmissionmedium.Atthetransportlayer,theprotocolhandlesallhandshakingandtransmissiondetailsandpresentsanabstractionofthenetworkconnectiontotheapplication.

Atthelowerlevelsoftheprotocolstack,duetonetworkcongestion,trafficloadbalancing,orotherunpredictablenetworkbehaviour,IPpacketsmaybelost,duplicated,ordeliveredoutoforder.TCPdetectstheseproblems,requestsre-transmissionoflostdata,rearrangesout-of-orderdataandevenhelpsminimizenetworkcongestiontoreducetheoccurrenceoftheotherproblems.Ifthedatastillremainsundelivered,thesourceisnotifiedofthisfailure.OncetheTCPreceiverhasreassembledthesequenceofoctetsoriginallytransmitted,itpassesthemtothereceivingapplication.Thus,TCPabstractstheapplication'scommunicationfromtheunderlyingnetworkingdetails.

TCPisusedextensivelybymanyapplicationsavailablebyinternet,includingtheWorldWideWeb(WWW),E-mail,FileTransferProtocol,SecureShell,peer-to-peerfilesharing,andstreamingmediaapplications.

TCPisoptimizedforaccuratedeliveryratherthantimelydeliveryandcanincurrelativelylongdelays(ontheorderofseconds)whilewaitingforout-of-ordermessagesorre-transmissionsoflostmessages.Therefore,itisnotparticularlysuitableforreal-timeapplicationssuchasVoiceoverIP.Forsuchapplications,protocolsliketheReal-timeTransportProtocol(RTP)operatingovertheUserDatagramProtocol(UDP)areusuallyrecommendedinstead.[3]

TCPisareliablestreamdeliveryservicewhichguaranteesthatallbytesreceivedwillbeidenticalwithbytessentandinthecorrectorder.Sincepackettransferbymanynetworksisnotreliable,atechniqueknownaspositiveacknowledgementwithre-transmissionisusedtoguaranteereliability.Thisfundamentaltechniquerequiresthereceivertorespondwithanacknowledgementmessageasitreceivesthedata.Thesenderkeepsarecordofeachpacketitsendsandmaintainsatimerfromwhenthepacketwassent.Thesenderre-transmitsapacketifthetimerexpiresbeforereceivingthemessageacknowledgement.Thetimerisneededincaseapacketgetslostorcorrupted.[3]

WhileIPhandlesactualdeliveryofthedata,TCPkeepstrackof'segments'-theindividualunitsofdatatransmissionthatamessageisdividedintoforefficientroutingthroughthenetwork.Forexample,whenanHTMLfileissentfromawebserver,theTCPsoftwarelayerofthatserverdividesthesequenceoffileoctetsintosegmentsandforwardsthemindividuallytotheIPsoftwarelayer(InternetLayer).TheInternetLayerencapsulateseachTCPsegmentintoanIPpacketbyaddingaheaderthatincludes(amongotherdata)thedestinationIPaddress.Whentheclientprogramonthedestinationcomputerreceivesthem,theTCPlayer(TransportLayer)re-assemblestheindividualsegmentsandensurestheyarecorrectlyorderedanderror-freeasitstreamsthemtoanapplication.
TransmissionControlProtocolacceptsdatafromadatastream,dividesitintochunks,andaddsaTCPheadercreatingaTCPsegment.TheTCPsegmentisthenencapsulatedintoanInternetProtocol(IP)datagram,andexchangedwithpeers.[4]

ThetermTCPpacketappearsinbothinformalandformalusage,whereasinmorepreciseterminologysegmentreferstotheTCPprotocoldataunit(PDU),datagram[5]totheIPPDU,andframetothedatalinklayerPDU:

ProcessestransmitdatabycallingontheTCPandpassingbuffersofdataasarguments.TheTCPpackagesthedatafromthesebuffersintosegmentsandcallsontheinternetmodule[e.g.IP]totransmiteachsegmenttothedestinationTCP.[6]

ATCPsegmentconsistsofasegmentheaderandadatasection.TheTCPheadercontains10mandatoryfields,andanoptionalextensionfield(Options,pinkbackgroundintable).

Thedatasectionfollowstheheader.Itscontentsarethepayloaddatacarriedfortheapplication.ThelengthofthedatasectionisnotspecifiedintheTCPsegmentheader.ItcanbecalculatedbysubtractingthecombinedlengthoftheTCPheaderandtheencapsulatingIPheaderfromthetotalIPdatagramlength(specifiedintheIPheader).

Sourceport(16bits)
Identifiesthesendingport.
Destinationport(16bits)
Identifiesthereceivingport.
Sequencenumber(32bits)
Hasadualrole:

IftheSYNflagisset(1),thenthisistheinitialsequencenumber.ThesequencenumberoftheactualfirstdatabyteandtheacknowledgednumberinthecorrespondingACKarethenthissequencenumberplus1.
IftheSYNflagisclear(0),thenthisistheaccumulatedsequencenumberofthefirstdatabyteofthissegmentforthecurrentsession.

Acknowledgmentnumber(32bits)
IftheACKflagissetthenthevalueofthisfieldisthenextsequencenumberthatthesenderoftheACKisexpecting.Thisacknowledgesreceiptofallpriorbytes(ifany).ThefirstACKsentbyeachendacknowledgestheotherend'sinitialsequencenumberitself,butnodata.
Dataoffset(4bits)
SpecifiesthesizeoftheTCPheaderin32-bitwords.Theminimumsizeheaderis5wordsandthemaximumis15wordsthusgivingtheminimumsizeof20bytesandmaximumof60bytes,allowingforupto40bytesofoptionsintheheader.ThisfieldgetsitsnamefromthefactthatitisalsotheoffsetfromthestartoftheTCPsegmenttotheactualdata.
Reserved(3bits)
Forfutureuseandshouldbesettozero.
Flags(9bits)(akaControlbits)
Contains91-bitflags

NS(1bit):ECN-nonce-concealmentprotection(experimental:seeRFC3540).
CWR(1bit):CongestionWindowReduced(CWR)flagissetbythesendinghosttoindicatethatitreceivedaTCPsegmentwiththeECEflagsetandhadrespondedincongestioncontrolmechanism(addedtoheaderbyRFC3168).
ECE(1bit):ECN-Echohasadualrole,dependingonthevalueoftheSYNflag.Itindicates:

IftheSYNflagisset(1),thattheTCPpeerisECNcapable.
IftheSYNflagisclear(0),thatapacketwithCongestionExperiencedflagset(ECN=11)inIPheaderwasreceivedduringnormaltransmission(addedtoheaderbyRFC3168).Thisservesasanindicationofnetworkcongestion(orimpendingcongestion)totheTCPsender.

URG(1bit):indicatesthattheUrgentpointerfieldissignificant
ACK(1bit):indicatesthattheAcknowledgmentfieldissignificant.AllpacketsaftertheinitialSYNpacketsentbytheclientshouldhavethisflagset.
PSH(1bit):Pushfunction.Askstopushthebuffereddatatothereceivingapplication.
RST(1bit):Resettheconnection
SYN(1bit):Synchronizesequencenumbers.Onlythefirstpacketsentfromeachendshouldhavethisflagset.Someotherflagsandfieldschangemeaningbasedonthisflag,andsomeareonlyvalidforwhenitisset,andotherswhenitisclear.
FIN(1bit):Lastpacketfromsender.

Windowsize(16bits)
Thesizeofthereceivewindow,whichspecifiesthenumberofwindowsizeunits(bydefault,bytes)(beyondthesegmentidentifiedbythesequencenumberintheacknowledgmentfield)thatthesenderofthissegmentiscurrentlywillingtoreceive(seeFlowcontrolandWindowScaling).
Checksum(16bits)
The16-bitchecksumfieldisusedforerror-checkingoftheheader,thePayloadandaPseudo-Header.ThePseudo-HeaderconsistoftheSourceIPAddress,theDestinationIPAddress,theprotocolnumberfortheTCP-Protocol(0x0006)andthelengthoftheTCP-HeadersincludingPayload(inBytes).
Urgentpointer(16bits)
iftheURGflagisset,thenthis16-bitfieldisanoffsetfromthesequencenumberindicatingthelasturgentdatabyte.

Options(Variable0-320bits,divisibleby32)
Thelengthofthisfieldisdeterminedbythedataoffsetfield.Optionshaveuptothreefields:Option-Kind(1byte),Option-Length(1byte),Option-Data(variable).TheOption-Kindfieldindicatesthetypeofoption,andistheonlyfieldthatisnotoptional.Dependingonwhatkindofoptionwearedealingwith,thenexttwofieldsmaybeset:theOption-Lengthfieldindicatesthetotallengthoftheoption,andtheOption-Datafieldcontainsthevalueoftheoption,ifapplicable.Forexample,anOption-Kindbyteof0x01indicatesthatthisisaNo-Opoptionusedonlyforpadding,anddoesnothaveanOption-LengthorOption-Databytefollowingit.AnOption-Kindbyteof0istheEndOfOptionsoption,andisalsoonlyonebyte.AnOption-Kindbyteof0x02indicatesthatthisistheMaximumSegmentSizeoption,andwillbefollowedbyabytespecifyingthelengthoftheMSSfield(shouldbe0x04).Thislengthisthetotallengthofthegivenoptionsfield,includingOption-KindandOption-Lengthbytes.SowhiletheMSSvalueistypicallyexpressedintwobytes,thelengthofthefieldwillbe4bytes(+2bytesofkindandlength).Inshort,anMSSoptionfieldwithavalueof0x05B4willshowupas(0x020x040x05B4)intheTCPoptionssection.
SomeoptionsmayonlybesentwhenSYNisset;theyareindicatedbelowas[SYN].Option-Kindandstandardlengthsgivenas(Option-Kind,Option-Length).

0(8bits):Endofoptionslist
1(8bits):Nooperation(NOP,Padding)Thismaybeusedtoalignoptionfieldson32-bitboundariesforbetterperformance.
2,4,SS(32bits):Maximumsegmentsize(seemaximumsegmentsize)[SYN]
3,3,S(24bits):Windowscale(seewindowscalingfordetails)[SYN][7]
4,2(16bits):SelectiveAcknowledgementpermitted.[SYN](Seeselectiveacknowledgmentsfordetails)[8]
5,N,BBBB,EEEE,...(variablebits,Niseither10,18,26,or34)-SelectiveACKnowledgement(SACK)[9]Thesefirsttwobytesarefollowedbyalistof1-4blocksbeingselectivelyacknowledged,specifiedas32-bitbegin/endpointers.
8,10,TTTT,EEEE(80bits)-Timestampandechoofprevioustimestamp(seeTCPtimestampsfordetails)[10]

Theremainingoptionsarehistorical,obsolete,experimental,notyetstandardized,orunassigned.OptionnumberassignmentsaremaintainedbytheIANA[11].
Padding
TheTCPheaderpaddingisusedtoensurethattheTCPheaderendsanddatabeginsona32bitboundary.Thepaddingiscomposedofzeros.[12]
TCPprotocoloperationsmaybedividedintothreephases.Connectionsmustbeproperlyestablishedinamulti-stephandshakeprocess(connectionestablishment)beforeenteringthedatatransferphase.Afterdatatransmissioniscompleted,theconnectionterminationclosesestablishedvirtualcircuitsandreleasesallallocatedresources.

ATCPconnectionismanagedbyanoperatingsystemthroughaprogramminginterfacethatrepresentsthelocalend-pointforcommunications,theInternetsocket.DuringthelifetimeofaTCPconnectionthelocalend-pointundergoesaseriesofstatechanges:[13]

LISTEN
(server)representswaitingforaconnectionrequestfromanyremoteTCPandport.
SYN-SENT
(client)representswaitingforamatchingconnectionrequestafterhavingsentaconnectionrequest.
SYN-RECEIVED
(server)representswaitingforaconfirmingconnectionrequestacknowledgmentafterhavingbothreceivedandsentaconnectionrequest.
ESTABLISHED
(bothserverandlclient)representsanopenconnection,datareceivedcanbedeliveredtotheuser.Thenormalstateforthedatatransferphaseoftheconnection.
FIN-WAIT-1
(bothserverandclient)representswaitingforaconnectionterminationrequestfromtheremoteTCP,oranacknowledgmentoftheconnectiontaerminationrequestpreviouslysent.
FIN-WAIT-2
(bothserverandclient)representswaitingforaconnectionterminationrequestfromtheremoteTCP.
CLOSE-WAIT
(bothserverandclient)representswaitingforaconnectionterminationrequestfromthelocaluser.
CLOSING
(bothserverandclient)representswaitingforaconnectionterminationrequestacknowledgmentfromtheremoteTCP.
LAST-ACK
(bothserverandclient)representswaitingforanacknowledgmentoftheconnectionterminationrequestpreviouslysenttotheremoteTCP(whichincludesanacknowledgmentofitsconnectionterminationrequest).
TIME-WAIT
(eitherserverorclient)representswaitingforenoughtimetopasstobesuretheremoteTCPreceivedtheacknowledgmentofitsconnectionterminationrequest.[AccordingtoRFC793aconnectioncanstayinTIME-WAITforamaximumoffourminutesknogwnastwoMSL(maximumsegmentlifetime).]
CLOSED
(bothserverandclient)representsnoconnectionstateatall.

Connectionestablishment

Toestablishaconnection,TCPusesathree-wayhandshake.Beforeaclientattemptstoconnectwithaserver,theservermustfirstbindtoandlistenataporttoopenitupforconnections:thisiscalledapassiveopen.Oncethepassiveopenisestablished,aclientmayinitiateanactiveopen.Toestablishaconnection,thethree-way(or{3-step)handshakeoccurs:

SYN:TheactiveopenisperformedbytheclientsendingaSYNtotheserver.Theclientsetsthesegment'ssequencenumbertoarandomvalueA.
SYN-ACK:Inresponse,theserverreplieswithaSYN-ACK.Theacknowledgmentnumberissettoonemorethanthereceivedsequencenumberi.e.A+1,andthesequencenumberthattheserverchoosesforthepacketisanotherrandomnumber,B.
ACK:Finally,theclientsendsanACKbacktotheserver.Thesequencenumberissettothereceivedacknowledgementvaluei.e.A+1,andtheacknowledgementnumberissettoonemorethanthereceivedsequencenumberi.e.B+1.

Atthispoint,boththeclientandserverhavereceivedanacknowledgmentoftheconnection.Thesteps1,2establishtheconnectionparameter(sequencenumber)foronedirectionanditisacknowledged.Thesteps2,3establishtheconnectionparameter(sequencenumber)fortheotherdirectionanditisacknowledged.Withthese,afull-duplexcommunicationisestablished.
Connectiontermination
Connectiontermination

Theconnectionterminationphaseusesafour-wayhandshake,witheachsideoftheconnectionterminatingindependently.Whenanendpointwishestostopitshalfoftheconnection,ittransmitsaFINpacket,whichtheotherendacknowledgeswithanACK.Therefore,atypicaltear-downrequiresapairofFINandACKsegmentsfromeachTCPendpoint.AfterthesidethatsentthefirstFINhasrespondedwiththefinalACK,itwaitsforatimeoutbeforefinallyclosingtheconnection,duringwhichtimethelocalportisunavailablefornewconnections;thispreventsconfusionduetodelayedpacketsbeingdeliveredduringsubsequentconnections.

Aconnectioncanbe"half-open",inwhichcaseonesidehasterminateditsend,buttheotherhasnot.Thesidethathasterminatedcannolongersendanydataintotheconnection,buttheothersidecan.Theterminatingsideshouldcontinuereadingthedatauntilthehothersideterminatesaswell.

Itisalsopossibletoterminatetheconnectionbya3-wayhandshake,whenhostAsendsaFINandhostBreplieswithaFIN&ACK(me1relycombines2stepsintoone)andhostAreplieswithanACK.[14]

SomehostTCPstacksmayimplementahalf-duplexclosesequence,asLinuxorHP-UXdo.Ifsuchahostactivelyclosesaconnectionbutstillhasnotreadalltheincomingdatathestackalreadyreceivedfromthelink,thishostsendsdaRSTinsteadofaFIN(Section4.2.2.13inRFC1122).ThisallowsaTCPapplicationtobesuretheremoteapplicationhasreadallthedatatheformersent-waitingtheFINfromtheremoteside,whenitactivelyclosestheconnection.ButtheremoteTCPstackcannotdistinguishbetweenaConnectionAbortingRSTandDataLossRST.Bothcausetheremotestacktoloseallthedatareceived.

SomeapplicationprotocolsusingtheTCPopen/closehandshakingfortheapplicationprotocolopen/closehandshakingmayfindtheRSTproblemondactiveclose.Asanexample:

s=connect(remote);
send(s,data);
close(s);

Foraprogramflowlikeabove,aTCP/IPstacklikethatdescribedabovedoesnotguaranteethatallthedataarrivestotheotherapplicationifunreaddatahasarrivedatthisend.
Resourceusage

Mostimplementationseallocateanentryinatablethatmapsasessiontoarunningoperatingsystenmprocess.BecauseTCPpacketsdono_tincludeasessionidentifier,bothendpointsidentifythesessionusingtheclient'saddressandport.Wheneverapacketisreceived,theTCPimplementationmustperformalookuponthistabletofindthedestinationprocess.EachentryinthetableisknownasaTrans7missionControlBlockorTCB.Itcontainsinformationabouttheendpoints(IPandport),statusoftheconnection,runningdactaaboutthepacketsthatarebeingpexchangedandbuffersforsendingandreceivingdata.

Thenumberofsessionsintheserversideislimited_onlybymemoryandcangrowasnewconnectionsarrive,buttheclientmustallocatearandomportbeforesendingthefirstSYNtotheserver.Thisportremainsallocatedduringthewholeconversation,andeffectivelylimitsthenumberofoutgoingconnectionsfromeachoftheclient'sIPaddresses.Ifanapplicationfailstoproperlycloseunrequiredconnections,aclientcanrunoutofresourcesandbecomeunabletoestablishnewTCPconnections,evenfromotherapplications.

Bothendpointsmustalsoallocatespaceforunacknowledgedpacketsandreceived(butunread)data.
Datatransfer

ThereareamfewkeyfeaturesthatsetTCPapartfromUserDatagramProtocol:

Ordereddatatransfer:thedestinationhostrearrangesaccordingtosequencenumber[3]
Retransmission5oflostpackets:anycumulativestreamnotacknowledgedisretransmitted[3]
Error-freedatatransfer[15]
Flowcontrol:limitstherateasendertransfersdatatoguaranteereliabledelivery.Therecegivercontinuallyhintsthesenderonhowmuchdatacanbereceived(controlledbytheslidingwindow).Whenthereceivinghost'sbufferfills,thenextacknowledgmentcontainsa0inthewindowsize,tostoptransferandallowthedatainthebuffertobeprocessed.[3]
Congestioncontrol[3]

Reliabletransmission

TCPusesasequencenumbertoidentifyeachbyteofdata.Thesequencenumberidentifiestheorderofthebytessentfromeachcomputersothatthedatacanbereco_nstructedinorder,regardlessofanypacketreordering,orpacketlossthatmayoccurduringtransmission.Thesequencelnumberofthefirstbyteischosenbythetransmitterforthefirstpacket,whichisflaggedSYN.Thisnumbercanbearbitrary,andshouldinfactbeunpredictabletodefendagainstTCPsequencepredictionattacks.

Acknowledgements(Acks)aresentwithasequencenumberbythereceiverofdatatotellthesenderthatdatahasbeenreceivedtothespecifiedbyteo.Acksdonotimplythatthedatahasbeendeliveredtotheapplication.Theymerelysignifythatitisnowthereceiver'sresponsibilitytodeliverthedata.

Reliabilityisachievedbythesenderdetectinglostdataandretransmittingit.TCPusestwoprimarytechniquestoidentifyloss.Retransmissiontimeout(abbreviatedasRTO)andduplicatecumulativeacknowledgements(DupAcks).
Dupack-basedretransmission

Ifasinglepacket(saypacket100)inastreamislost,thenthereceivercannotacknowledgepacketsabove100becauseitusescumulativeacks.Hencethereceiveracknowledgespacket99againonthereceiptofanotherdatapacklet.Thisduplicateacknowledgementisusedasasignalforpacketloss.Thatis,ifthesenderreceivesthreeduplicateacknowledgements,itretransmitsthelastunacknowledgedpacket.Athresholdofthreeisusedbecausethenetworkmayreorderpacketscausingduplicateacknowledgements.Thisthresholdhasbeendemonstratedtoavoidspuriousretransmissionsduetoreordering.[16]Sometimesselectiveacknowledgements(SACKs)areusedtogivemoreexplicitfeedbackonwhichpacketshavebeenreceived.ThisgreatlyimprovesTCP'sabilitytoretransmittherightpackets.
Timeout-basedretransmission


Ifthesenderinfersthatdatahasbeenlostinthenetworkusingoneofthetwotechniquesdescribedabove,itretransmitsthedata.
Errordetection

Sequencenumbersallowreceiverstodiscardduplicatepacketsandproperlysequencereorderedpackets.Acknowledgmentsallowsenderstodeterminewhentoretransmitlostpackets.

Toassurecorrectnessachecksumfieldisincluded;seechecksumcomputationsectionfordetailsonchecksumming.TheTCPchecksumisaweakcheckbymodernstandards.DataLinkLayerswithhighbiterrorratesmayrequireadditionallinkerrorcorrection/detectioncapabilities.TheweakchecksumispartiallycompensatedforbythecommonuseofaCRCorbetterintegritycheckatlayer2,belowbothTCPandIP,suchasisusedinPPPortheEthernetframe.However,thisdoesnotmeanthatthe16-bitTCPchecksumisredundant:remarkably,introductionoferrorsinpacketsbetweenCRC-protectedhopsiscommon,buttheend-to-end16-bitTCPchecksumcatchesmostofthesesimpleerrors.[18]Thisistheend-to-endprincipleatwork.
Flowcontrol

TCPusesanend-to-endflowcontrolprotocoltoavoidhavingthesendersenddatatoofastfortheTCPreceivertoreceiveandprocessitreliably.Havingamechanismforflowcontrolisessentialinanenvironmentwheremachinesofdiversenetworkspeedscommunicate.Forexample,ifaPCsendsdatatoasmartphonethatisslowlyprocessingreceiveddata,thesmartphonemustregulatethedataflowsoasnottobeoverwhelmed.[3]

TCPusesaslidingwindowflowcontrolprotocol.IneachTCPsegment,thereceiverspecifiesinthereceivewindowfieldtheamountofadditionallyreceiveddata(inbytes)thatitiswillingtobufferfortheconnection.Thesendinghostcansendonlyuptothatamountofdatabeforeitmustwaitforanacknowledgmentandwindowupdatefromthereceivinghost.
Whenareceiveradvertisesawindowsizeof0,thesenderstopssendingdataandstartsthepersisttimer.ThepersisttimerisusedtoprotectTCPfromadeadlocksituationthatcouldariseifasubsequentwindowsizeupdatefromthereceiverislost,andthesendercannotsendmoredatauntilreceivinganewwindowsizeupdatefromthereceiver.Whenthepersisttimerexpires,theTCPsenderattemptsrecoverybysendingasmallpacketsothatthereceiverrespondsbysendinganotheracknowledgementcontainingthenewwindowsize.

Ifareceiverisprocessingincomingdatainsmallincrements,itmayrepeatedlyadvertiseasmallreceivewindow.Thisisreferredtoasthesillywindowsyndrome,sinceitisinefficienttosendonlyafewbytesofdatainaTCPsegment,giventherelativelylargeoverheadoftheTCPheader.
Congestioncontrol

ThefinalmainaspectofTCPiscongestioncontrol.TCPusesanumberofmechanismstoachievehighperformanceandavoidcongestioncollapse,wherenetworkperformancecanfallbyseveralordersofmagnitude.Thesemechanismscontroltherateofdataenteringthenetwork,keepingthedataflowbelowaratethatwouldtriggercollapse.Theyalsoyieldanapproximatelymax-minfairallocationbetweenflows.

Acknowledgmentsfordatasent,orlackofacknowledgments,areusedbysenderstoinfernetworkconditionsbetweentheTCPsenderandreceiver.Coupledwithtimers,TCPsendersandreceiverscanalterthebehavioroftheflowofdata.Thisismoregenerallyreferredtoascongestioncontroland/ornetworkcongestionavoidance.

ModernimplementationsofTCPcontainfourintertwinedalgorithms:slow-start,congestionavoidance,fastretransmit,andfastrecovery(RFC5681).

Inaddition,sendersemployaretransmissiontimeout(RTO)thatisbasedontheestimatedround-triptime(orRTT)betweenthesenderandreceiver,aswellasthevarianceinthisroundtriptime.ThebehaviorofthistimerisspecifiedinRFC6298.TherearesubtletiesintheestimationofRTT.Forexample,sendersmustbecarefulwhencalculatingRTTsamplesforretransmittedpackets;typicallytheyuseKarn'sAlgorithmorTCPtimestamps(seeRFC1323).TheseindividualRTTsamplesarethenaveragedovertimetocreateaSmoothedRoundTripTime(SRTT)usingJacobson'salgorithm.ThisSRTTvalueiswhatisfinallyusedastheround-triptimeestimate.

EnhancingTCPtoreliablyhandleloss,minimizeerrors,managecongestionandgofastinveryhigh-speedenvironmentsareongoingareasofresearchandstandardsdevelopment.Asaresult,thereareanumberofTCPcongestionavoidancealgorithmvariations.
Maximumsegmentsize

Themaximumsegmentsize(MSS)isthelargestamountofdata,specifiedinbytes,thatTCPiswillingtoreceiveinasinglesegment.Forbestperformance,theMSSshouldbesetsmallenoughtoavoidIPfragmentation,whichcanleadtopacketlossandexcessiveretransmissions.Totrytoaccomplishthis,typicallytheMSSisannouncedbyeachsideusingtheMSSoptionwhentheTCPconnectionisestablished,inwhichcaseitisderivedfromthemaximumtransmissionunit(MTU)sizeofthedatalinklayerofthenetworkstowhichthesenderandreceiveraredirectlyattached.Furthermore,TCPsenderscanusepathMTUdiscoverytoinfertheminimumMTUalongthenetworkpathbetweenthesenderandreceiver,andusethistodynamicallyadjusttheMSStoavoidIPfragmentationwithinthenetwork.

MSSannouncementisalsooftencalled"MSSnegotiation".Strictlyspeaking,theMSSisnot"negotiated"betweentheoriginatorandthereceiver,becausethatwouldimplythatbothoriginatorandreceiverwillnegotiateandagreeuponasingle,unifiedMSSthatappliestoallcommunicationinbothdirectionsoftheconnection.Infact,twocompletelyindependentvaluesofMSSarepermittedforthetwodirectionsofdataflowinaTCPconnection.[19]Thissituationmayarise,forexample,ifoneofthedevicesparticipatinginaconnectionhasanextremelylimitedamountofmemoryreserved(perhapsevensmallerthantheoveralldiscoveredPathMTU)forprocessingincomingTCPsegments.
Selectiveacknowledgments

RelyingpurelyonthecumulativeacknowledgmentschemeemployedbytheoriginalTCPprotocolcanleadtoinefficiencieswhenpacketsarelost.Forexample,suppose10,000bytesaresentin10differentTCPpackets,andthefirstpacketislostduringtransmission.Inapurecumulativeacknowledgmentprotocol,thereceivercannotsaythatitreceivedbytes1,000to9,999successfully,butfailedtoreceivethefirstpacket,containingbytes0to999.Thusthesendermaythenhavetoresendall10,000bytes.

ToalleviatethisissueTCPemploystheselectiveacknowledgment(SACK)option,definedinRFC2018,whichallowsthereceivertoacknowledgediscontinuousblocksofpacketswhichwerereceivedcorrectly,inadditiontothesequencenumberofthelastcontiguousbytereceivedsuccessively,asinthebasicTCPacknowledgment.TheacknowledgementcanspecifyanumberofSACKblocks,whereeachSACKblockisconveyedbythestartingandendingsequencenumbersofacontiguousrangethatthereceivercorrectlyreceived.Intheexampleabove,thereceiverwouldsendSACKwithsequencenumbers1000and9999.Thesenderwouldaccordinglyretransmitonlythefirstpacket(bytes0to999).

ATCPsendercaninterpretanout-of-orderpacketdeliveryasalostpacket.Ifitdoesso,theTCPsenderwillretransmitthepacketprevioustotheout-of-orderpacketandslowitsdatadeliveryrateforthatconnection.Theduplicate-SACKoption,anextensiontotheSACKoptionthatwasdefinedinRFC2883,solvesthisproblem.TheTCPreceiversendsaD-ACKtoindicatethatnopacketswerelost,andtheTCPsendercanthenreinstatethehighertransmission-rate.

Windowscaling
Mainarticle:TCPwindowscaleoption

Formoreefficientuseofhigh-bandwidthnetworks,alargerTCPwindowsizemaybeused.TheTCPwindowsizefieldcontrolstheflowofdataanditsvalueislimitedtobetween2and65,535bytes.

Sincethesizefieldcannotbeexpanded,ascalingfactorisused.TheTCPwindowscaleoption,asdefinedinRFC1323,isanoptionusedtoincreasethemaximumwindowsizefrom65,535bytesto1gigabyte.ScalinguptolargerwindowsizesisapartofwhatisnecessaryforTCPtuning.

ThewindowscaleoptionisusedonlyduringtheTCP3-wayhandshake.Thewindowscalevaluerepresentsthenumberofbitstoleft-shiftthe16-bitwindowsizefield.Thewindowscalevaluecanbesetfrom0(noshift)to14foreachdirectionindependently.BothsidesmustsendtheoptionintheirSYNsegmentstoenablewindowscalingineitherdirection.

Someroutersandpacketfirewallsrewritethewindowscalingfactorduringatransmission.ThiscausessendingandreceivingsidestoassumedifferentTCPwindowsizes.Theresultisnon-stabletrafficthatmaybeveryslow.Theproblemisvisibleonsomesitesbehindadefectiverouter.[20]
TCPtimestamps

TCPtimestamps,definedinRFC1323,canhelpTCPdetermineinwhichorderpacketsweresent.TCPtimestampsarenotnormallyalignedtothesystemclockandstartatsomerandomvalue.Manyoperatingsystemswillincrementthetimestampforeveryelapsedmillisecond;howevertheRFConlystatesthattheticksshouldbeproportional.

Therearetwotimestampfields:

a4-bytesendertimestampvalue(mytimestamp)
a4-byteechoreplytimestampvalue(themostrecenttimestampreceivedfromyou).

TCPtimestampsareusedinanalgorithmknownasProtectionAgainstWrappedSequencenumbers,orPAWS(seeRFC1323fordetails).PAWSisusedwhenthereceivewindowcrossesthesequencenumberwraparoundboundary.Inthecasewhereapacketwaspotentiallyretransmitteditanswersthequestion:"Isthissequencenumberinthefirst4GBorthesecond?"Andthetimestampisusedtobreakthetie.

Also,theEifeldetectionalgorithm(RFC3522)usesTCPtimestampstodetermineifretransmissionsareoccurringbecausepacketsarelostorsimplyoutoforder.

RecentStatisticsshowthatthelevelofTimestampadoptionhasstagnated,at~40%,owingtoWindowsserverdroppingsupportsinceWindowsServer2008[21].
Out-of-banddata

Itispossibletointerruptorabortthequeuedstreaminsteadofwaitingforthestreamtofinish.Thisisdonebyspecifyingthedataasurgent.Thistellsthereceivingprogramtoprocessitimmediately,alongwiththerestoftheurgentdata.Whenfinished,TCPinformstheapplicationandresumesbacktothestreamqueue.AnexampleiswhenTCPisusedforaremoteloginsession,theusercansendakeyboardsequencethatinterruptsorabortstheprogramattheotherend.Thesesignalsaremostoftenneededwhenaprogramontheremotemachinefailstooperatecorrectly.Thesignalsmustbesentwithoutwaitingfortheprogramtofinishitscurrenttransfer.[3]

TCPOOBdatawasnotdesignedforthemodernInternet.Theurgentpointeronlyalterstheprocessingontheremotehostanddoesn'texpediteanyprocessingonthenetworkitself.Whenitgetstotheremotehosttherearetwoslightlydifferentinterpretationsoftheprotocol,whichmeansonlysinglebytesofOOBdataarereliable.Thisisassumingitisreliableatallasitisoneoftheleastcommonlyusedprotocolelementsandtendstobepoorlyimplemented.[22][23]
Forcingdatadelivery

Normally,TCPwaitsfor200msforafullpacketofdatatosend(Nagle'sAlgorithmtriestogroupsmallmessagesintoasinglepacket).Thiswaitcreatessmall,butpotentiallyseriousdelaysifrepeatedconstantlyduringafiletransfer.Forexample,atypicalsendblockwouldbe4KB,atypicalMSSis1460,so2packetsgooutona10Mbit/sethernettaking~1.2mseachfollowedbyathirdcarryingtheremaining1176aftera197mspausebecauseTCPiswaitingforafullbuffer.

Inthecaseoftelnet,eachuserkeystrokeisechoedbackbytheserverbeforetheusercanseeitonthescreen.Thisdelaywouldbecomeveryannoying.

SettingthesocketoptionTCP_NODELAYoverridesthedefault200mssenddelay.Applicationprogramsusethissocketoptiontoforceoutputtobesentafterwritingacharacterorlineofcharacters.

TheRFCdefinesthePSHpushbitas"amessagetothereceivingTCPstacktosendthisdataimmediatelyuptothereceivingapplication".[3]ThereisnowaytoindicateorcontrolitinuserspaceusingBerkeleysocketsanditiscontrolledbyprotocolstackonly.[24]
