The TransmissionControlProtocol (TCP)isoneofthemain protocols oftheInternetprotocolsuite.Itoriginatedintheinitialnetworkimplementationinwhichitcomplementedthe InternetProtocol (IP).Therefore,theentiresuiteiscommonlyreferredtoas TCP/IP.TCPprovides reliable,ordered,and error-checked deliveryofastreamof octets (bytes)betweenapplicationsrunningonhostscommunicatingbyanIPnetwork.MajorInternetapplicationssuchasthe WorldWideWeb, email, remoteadministration,and filetransfer relyonTCP.Applicationsthatdonotrequirereliabledatastreamservicemayusethe UserDatagramProtocol (UDP),whichprovidesa connectionless datagram servicethatemphasizesreduced latency overreliability.

DuringMay1974,the InstituteofElectricalandElectronicEngineers (IEEE)publishedapapertitled AProtocolforPacketNetworkIntercommunication.[1] Thepaper'sauthors, VintCerf and BobKahn,describedaninternetworkingprotocolforsharingresourcesusing packetswitching amongthenodes,incorporatingconceptsfromtheFrench CYCLADES projectdirectedby LouisPouzin.[2] Acentralcontrolcomponentofthismodelwasthe TransmissionControlProgram thatincorporatedbothconnection-orientedlinksanddatagramservicesbetweenhosts.ThemonolithicTransmissionControlProgramwaslaterdividedintoamodulararchitectureconsistingofthe TransmissionControlProtocol atthe connection-orientedlayer andthe InternetProtocol attheinternetworking(datagram)layer.Themodelbecameknowninformallyas TCP/IP,althoughformallyitwashenceforthtermedthe InternetProtocolSuite.
Networkfunction[edit]
TheTransmissionControlProtocolprovidesacommunicationserviceatanintermediatelevelbetweenanapplicationprogramandtheInternetProtocol.Itprovideshost-to-hostconnectivityatthe TransportLayer oftheInternetmodel.Anapplicationdoesnotneedtoknowtheparticularmechanismsforsendingdataviaalinktoanotherhost,suchastherequiredpacketfragmentationonthetransmissionmedium.Atthetransportlayer,theprotocolhandlesallhandshakingandtransmissiondetailsandpresentsanabstractionofthenetworkconnectiontotheapplication.
Atthelowerlevelsoftheprotocolstack,duetonetworkcongestion,trafficloadbalancing,orotherunpredictablenetworkbehaviour,IPpacketsmaybe lost,duplicated,or deliveredoutoforder.TCPdetectstheseproblems,requests re-transmissionoflostdata,rearrangesout-of-orderdataandevenhelpsminimizenetworkcongestiontoreducetheoccurrenceoftheotherproblems.Ifthedatastillremainsundelivered,thesourceisnotifiedofthisfailure.OncetheTCPreceiverhasreassembledthesequenceofoctetsoriginallytransmitted,itpassesthemtothereceivingapplication.Thus,TCPabstractstheapplication'scommunicationfromtheunderlyingnetworkingdetails.
TCPisusedextensivelybymanyapplicationsavailablebyinternet,includingthe WorldWideWeb (WWW), E-mail, FileTransferProtocol, SecureShell, peer-to-peer filesharing,and streamingmedia applications.
TCPisoptimizedforaccuratedeliveryratherthantimelydeliveryandcanincurrelativelylongdelays(ontheorderofseconds)whilewaitingforout-of-ordermessagesorre-transmissionsoflostmessages.Therefore,itisnotparticularlysuitableforreal-timeapplicationssuchas VoiceoverIP.Forsuchapplications,protocolslikethe Real-timeTransportProtocol (RTP)operatingoverthe UserDatagramProtocol (UDP)areusuallyrecommendedinstead.[3]
TCPisareliablestreamdeliveryservicewhichguaranteesthatallbytesreceivedwillbeidenticalwithbytessentandinthecorrectorder.Sincepackettransferbymanynetworksisnotreliable,atechniqueknownas positiveacknowledgementwithre-transmission isusedtoguaranteereliability.Thisfundamentaltechniquerequiresthereceivertorespondwithanacknowledgementmessageasitreceivesthedata.Thesenderkeepsarecordofeachpacketitsendsandmaintainsatimerfromwhenthepacketwassent.Thesenderre-transmitsapacketifthetimerexpiresbeforereceivingthemessageacknowledgement.Thetimerisneededincaseapacketgetslostorcorrupted.[3]
WhileIPhandlesactualdeliveryofthedata,TCPkeepstrackof'segments'-theindividualunitsofdatatransmissionthatamessageisdividedintoforefficientroutingthroughthenetwork.Forexample,whenanHTMLfileissentfromawebserver,theTCPsoftwarelayerofthatserverdividesthesequenceoffileoctetsintosegmentsandforwardsthemindividuallytotheIPsoftwarelayer(InternetLayer).TheInternetLayerencapsulateseachTCPsegmentintoanIPpacketbyaddingaheaderthatincludes(amongotherdata)thedestination IPaddress.Whentheclientprogramonthedestinationcomputerreceivesthem,theTCPlayer(TransportLayer)re-assemblestheindividualsegmentsandensurestheyarecorrectlyorderedanderror-freeasitstreamsthemtoanapplication.
TCPsegmentstructure[edit]
TransmissionControlProtocolacceptsdatafromadatastream,dividesitintochunks,andaddsaTCPheadercreatingaTCPsegment.TheTCPsegmentisthen encapsulated intoanInternetProtocol(IP)datagram,andexchangedwithpeers.[4]
Theterm TCPpacket appearsinbothinformalandformalusage,whereasinmorepreciseterminology segment referstotheTCP protocoldataunit (PDU), datagram[5] totheIPPDU,and frame tothedatalinklayerPDU:
ProcessestransmitdatabycallingontheTCPandpassingbuffersofdataasarguments.TheTCPpackagesthedatafromthesebuffersintosegmentsandcallsontheinternetmodule[e.g.IP]totransmiteachsegmenttothedestinationTCP.[6]
ATCPsegmentconsistsofasegment header anda data section.TheTCPheadercontains10mandatoryfields,andanoptionalextensionfield(Options,pinkbackgroundintable).
Thedatasectionfollowstheheader.Itscontentsarethepayloaddatacarriedfortheapplication.ThelengthofthedatasectionisnotspecifiedintheTCPsegmentheader.ItcanbecalculatedbysubtractingthecombinedlengthoftheTCPheaderandtheencapsulatingIPheaderfromthetotalIPdatagramlength(specifiedintheIPheader).

Sourceport(16bits)
Identifiesthesendingport.
Destinationport(16bits)
Identifiesthereceivingport.
Sequencenumber(32bits)
Hasadualrole:
Ifthe SYN flagisset(1),thenthisistheinitialsequencenumber.ThesequencenumberoftheactualfirstdatabyteandtheacknowledgednumberinthecorrespondingACKarethenthissequencenumberplus1.
Ifthe SYN flagisclear(0),thenthisistheaccumulatedsequencenumberofthefirstdatabyteofthissegmentforthecurrentsession.
Acknowledgmentnumber(32bits)
Ifthe ACK flagissetthenthevalueofthisfieldisthenextsequencenumberthatthesenderoftheACKisexpecting.Thisacknowledgesreceiptofallpriorbytes(ifany).Thefirst ACK sentbyeachendacknowledgestheotherend'sinitialsequencenumberitself,butnodata.
Dataoffset(4bits)
SpecifiesthesizeoftheTCPheaderin32-bit words.Theminimumsizeheaderis5wordsandthemaximumis15wordsthusgivingtheminimumsizeof20bytesandmaximumof60bytes,allowingforupto40bytesofoptionsintheheader.ThisfieldgetsitsnamefromthefactthatitisalsotheoffsetfromthestartoftheTCPsegmenttotheactualdata.
Reserved(3bits)
Forfutureuseandshouldbesettozero.
Flags(9bits)(akaControlbits)
Contains91-bitflags
NS (1bit):ECN-nonce-concealmentprotection(experimental:see RFC3540).
CWR (1bit):CongestionWindowReduced(CWR)flagissetbythesendinghosttoindicatethatitreceivedaTCPsegmentwiththe ECE flagsetandhadrespondedincongestioncontrolmechanism(addedtoheaderby RFC3168).
ECE (1bit):ECN-Echohasadualrole,dependingonthevalueoftheSYNflag.Itindicates:
Ifthe SYN flagisset(1),thattheTCPpeeris ECN capable.
Ifthe SYN flagisclear(0),thatapacketwithCongestionExperiencedflagset(ECN=11)inIPheaderwasreceivedduringnormaltransmission(addedtoheaderby RFC3168).Thisservesasanindicationofnetworkcongestion(orimpendingcongestion)totheTCPsender.
URG (1bit):indicatesthattheUrgentpointerfieldissignificant
ACK (1bit):indicatesthattheAcknowledgmentfieldissignificant.Allpacketsaftertheinitial SYN packetsentbytheclientshouldhavethisflagset.
PSH (1bit):Pushfunction.Askstopushthebuffereddatatothereceivingapplication.
RST (1bit):Resettheconnection
SYN (1bit):Synchronizesequencenumbers.Onlythefirstpacketsentfromeachendshouldhavethisflagset.Someotherflagsandfieldschangemeaningbasedonthisflag,andsomeareonlyvalidforwhenitisset,andotherswhenitisclear.
FIN (1bit):Lastpacketfromsender.
Windowsize(16bits)
Thesizeofthe receivewindow,whichspecifiesthenumberofwindowsizeunits(bydefault,bytes)(beyondthesegmentidentifiedbythesequencenumberintheacknowledgmentfield)thatthesenderofthissegmentiscurrentlywillingtoreceive(see Flowcontrol and WindowScaling).
Checksum(16bits)
The16-bit checksum fieldisusedforerror-checkingoftheheader,thePayloadandaPseudo-Header.ThePseudo-Headerconsistofthe SourceIPAddress,the DestinationIPAddress,the protocolnumber fortheTCP-Protocol(0x0006)andthelengthoftheTCP-HeadersincludingPayload(inBytes).
Urgentpointer(16bits)
ifthe URG flagisset,thenthis16-bitfieldisanoffsetfromthesequencenumberindicatingthelasturgentdatabyte.
Options(Variable0–320bits,divisibleby32)
Thelengthofthisfieldisdeterminedbythedataoffsetfield.Optionshaveuptothreefields:Option-Kind(1byte),Option-Length(1byte),Option-Data(variable).TheOption-Kindfieldindicatesthetypeofoption,andistheonlyfieldthatisnotoptional.Dependingonwhatkindofoptionwearedealingwith,thenexttwofieldsmaybeset:theOption-Lengthfieldindicatesthetotallengthoftheoption,andtheOption-Datafieldcontainsthevalueoftheoption,ifapplicable.Forexample,anOption-Kindbyteof0x01indicatesthatthisisaNo-Opoptionusedonlyforpadding,anddoesnothaveanOption-LengthorOption-Databytefollowingit.AnOption-Kindbyteof0istheEndOfOptionsoption,andisalsoonlyonebyte.AnOption-Kindbyteof0x02indicatesthatthisistheMaximumSegmentSizeoption,andwillbefollowedbyabytespecifyingthelengthoftheMSSfield(shouldbe0x04).Thislengthisthetotallengthofthegivenoptionsfield,includingOption-KindandOption-Lengthbytes.SowhiletheMSSvalueistypicallyexpressedintwobytes,thelengthofthefieldwillbe4bytes(+2bytesofkindandlength).Inshort,anMSSoptionfieldwithavalueof0x05B4willshowupas(0x020x040x05B4)intheTCPoptionssection.
Someoptionsmayonlybesentwhen SYN isset;theyareindicatedbelowas [SYN].Option-Kindandstandardlengthsgivenas(Option-Kind,Option-Length).
0(8bits):Endofoptionslist
1(8bits):Nooperation(NOP,Padding)Thismaybeusedtoalignoptionfieldson32-bitboundariesforbetterperformance.
2,4,SS (32bits):Maximumsegmentsize(see maximumsegmentsize) [SYN]
3,3,S (24bits):Windowscale(see windowscaling fordetails) [SYN][7]
4,2(16bits):SelectiveAcknowledgementpermitted. [SYN] (See selectiveacknowledgments fordetails)[8]
5,N,BBBB,EEEE,... (variablebits, N iseither10,18,26,or34)-SelectiveACKnowledgement(SACK)[9] Thesefirsttwobytesarefollowedbyalistof1–4blocksbeingselectivelyacknowledged,specifiedas32-bitbegin/endpointers.
8,10,TTTT,EEEE (80bits)-Timestampandechoofprevioustimestamp(see TCPtimestamps fordetails)[10]
Theremainingoptionsarehistorical,obsolete,experimental,notyetstandardized,orunassigned.OptionnumberassignmentsaremaintainedbytheIANA[11].
Padding
TheTCPheaderpaddingisusedtoensurethattheTCPheaderendsanddatabeginsona32bitboundary.Thepaddingiscomposedofzeros.[12]
Protocoloperation

TCPprotocoloperationsmaybedividedintothreephases.Connectionsmustbeproperlyestablishedinamulti-stephandshakeprocess(connectionestablishment)beforeenteringthe datatransfer phase.Afterdatatransmissioniscompleted,the connectiontermination closesestablishedvirtualcircuitsandreleasesallallocatedresources.
ATCPconnectionismanagedbyanoperatingsystemthroughaprogramminginterfacethatrepresentsthelocalend-pointforcommunications,the Internetsocket.DuringthelifetimeofaTCPconnectionthelocalend-pointundergoesaseriesof state changes:[13]
LISTEN
(server)representswaitingforaconnectionrequestfromanyremoteTCPandport.
SYN-SENT
(client)representswaitingforamatchingconnectionrequestafterhavingsentaconnectionrequest.
SYN-RECEIVED
(server)representswaitingforaconfirmingconnectionrequestacknowledgmentafterhavingbothreceivedandsentaconnectionrequest.
ESTABLISHED
(bothserverandclient)representsanopenconnection,datareceivedcanbedeliveredtotheuser.Thenormalstateforthedatatransferphaseoftheconnection.
FIN-WAIT-1
(bothserverandclient)representswaitingforaconnectionterminationrequestfromtheremoteTCP,oranacknowledgmentoftheconnectionterminationrequestpreviouslysent.
FIN-WAIT-2
(bothserverandclient)representswaitingforaconnectionterminationrequestfromtheremoteTCP.
CLOSE-WAIT
(bothserverandclient)representswaitingforaconnectionterminationrequestfromthelocaluser.
CLOSING
(bothserverandclient)representswaitingforaconnectionterminationrequestacknowledgmentfromtheremoteTCP.
LAST-ACK
(bothserverandclient)representswaitingforanacknowledgmentoftheconnectionterminationrequestpreviouslysenttotheremoteTCP(whichincludesanacknowledgmentofitsconnectionterminationrequest).
TIME-WAIT
(eitherserverorclient)representswaitingforenoughtimetopasstobesuretheremoteTCPreceivedtheacknowledgmentofitsconnectionterminationrequest.[Accordingto RFC793 aconnectioncanstayinTIME-WAITforamaximumoffourminutesknownastwo MSL (maximumsegmentlifetime).]
CLOSED
(bothserverandclient)representsnoconnectionstateatall.
Connectionestablishment[edit]
Toestablishaconnection,TCPusesathree-way handshake.Beforeaclientattemptstoconnectwithaserver,theservermustfirstbindtoandlistenataporttoopenitupforconnections:thisiscalledapassiveopen.Oncethepassiveopenisestablished,aclientmayinitiateanactiveopen.Toestablishaconnection,thethree-way(or3-step)handshakeoccurs:
SYN:TheactiveopenisperformedbytheclientsendingaSYNtotheserver.Theclientsetsthesegment'ssequencenumbertoarandomvalueA.
SYN-ACK:Inresponse,theserverreplieswithaSYN-ACK.Theacknowledgmentnumberissettoonemorethanthereceivedsequencenumberi.e.A+1,andthesequencenumberthattheserverchoosesforthepacketisanotherrandomnumber,B.
ACK:Finally,theclientsendsanACKbacktotheserver.Thesequencenumberissettothereceivedacknowledgementvaluei.e.A+1,andtheacknowledgementnumberissettoonemorethanthereceivedsequencenumberi.e.B+1.
Atthispoint,boththeclientandserverhavereceivedanacknowledgmentoftheconnection.Thesteps1,2establishtheconnectionparameter(sequencenumber)foronedirectionanditisacknowledged.Thesteps2,3establishtheconnectionparameter(sequencenumber)fortheotherdirectionanditisacknowledged.Withthese,afull-duplexcommunicationisestablished.
Connectiontermination
Theconnectionterminationphaseusesafour-wayhandshake,witheachsideoftheconnectionterminatingindependently.Whenanendpointwishestostopitshalfoftheconnection,ittransmitsaFINpacket,whichtheotherendacknowledgeswithanACK.Therefore,atypicaltear-downrequiresapairofFINandACKsegmentsfromeachTCPendpoint.AfterthesidethatsentthefirstFINhasrespondedwiththefinalACK,itwaitsforatimeoutbeforefinallyclosingtheconnection,duringwhichtimethelocalportisunavailablefornewconnections;thispreventsconfusionduetodelayedpacketsbeingdeliveredduringsubsequentconnections.
Aconnectioncanbe "half-open",inwhichcaseonesidehasterminateditsend,buttheotherhasnot.Thesidethathasterminatedcannolongersendanydataintotheconnection,buttheothersidecan.Theterminatingsideshouldcontinuereadingthedatauntiltheothersideterminatesaswell.
Itisalsopossibletoterminatetheconnectionbya3-wayhandshake,whenhostAsendsaFINandhostBreplieswithaFIN&ACK(merelycombines2stepsintoone)andhostAreplieswithanACK.[14]
SomehostTCPstacksmayimplementahalf-duplexclosesequence,as Linux or HP-UX do.Ifsuchahostactivelyclosesaconnectionbutstillhasnotreadalltheincomingdatathestackalreadyreceivedfromthelink,thishostsendsaRSTinsteadofaFIN(Section4.2.2.13in RFC1122).ThisallowsaTCPapplicationtobesuretheremoteapplicationhasreadallthedatatheformersent—waitingtheFINfromtheremoteside,whenitactivelyclosestheconnection.ButtheremoteTCPstackcannotdistinguishbetweena ConnectionAbortingRST and DataLossRST.Bothcausetheremotestacktoloseallthedatareceived.
SomeapplicationprotocolsusingtheTCPopen/closehandshakingfortheapplicationprotocolopen/closehandshakingmayfindtheRSTproblemonactiveclose.Asanexample:
s=connect(remote);
send(s,data);
close(s);
Foraprogramflowlikeabove,aTCP/IPstacklikethatdescribedabovedoesnotguaranteethatallthedataarrivestotheotherapplicationifunreaddatahasarrivedatthisend.
Resourceusage[edit]
Mostimplementationsallocateanentryinatablethatmapsasessiontoarunningoperatingsystemprocess.BecauseTCPpacketsdonotincludeasessionidentifier,bothendpointsidentifythesessionusingtheclient'saddressandport.Wheneverapacketisreceived,theTCPimplementationmustperformalookuponthistabletofindthedestinationprocess.EachentryinthetableisknownasaTransmissionControlBlockorTCB.Itcontainsinformationabouttheendpoints(IPandport),statusoftheconnection,runningdataaboutthepacketsthatarebeingexchangedandbuffersforsendingandreceivingdata.
Thenumberofsessionsintheserversideislimitedonlybymemoryandcangrowasnewconnectionsarrive,buttheclientmustallocatearandomportbeforesendingthefirstSYNtotheserver.Thisportremainsallocatedduringthewholeconversation,andeffectivelylimitsthenumberofoutgoingconnectionsfromeachoftheclient'sIPaddresses.Ifanapplicationfailstoproperlycloseunrequiredconnections,aclientcanrunoutofresourcesandbecomeunabletoestablishnewTCPconnections,evenfromotherapplications.
Bothendpointsmustalsoallocatespaceforunacknowledgedpacketsandreceived(butunread)data.
Datatransfer[edit]
ThereareafewkeyfeaturesthatsetTCPapartfrom UserDatagramProtocol:
Ordereddatatransfer:thedestinationhostrearrangesaccordingtosequencenumber[3]
Retransmissionoflostpackets:anycumulativestreamnotacknowledgedisretransmitted[3]
Error-freedatatransfer[15]
Flowcontrol:limitstherateasendertransfersdatatoguaranteereliabledelivery.Thereceivercontinuallyhintsthesenderonhowmuchdatacanbereceived(controlledbytheslidingwindow).Whenthereceivinghost'sbufferfills,thenextacknowledgmentcontainsa0inthewindowsize,tostoptransferandallowthedatainthebuffertobeprocessed.[3]
Congestioncontrol[3]
Reliabletransmission[edit]
TCPusesa sequencenumber toidentifyeachbyteofdata.Thesequencenumberidentifiestheorderofthebytessentfromeachcomputersothatthedatacanbereconstructedinorder,regardlessofany packetreordering,or packetloss thatmayoccurduringtransmission.Thesequencenumberofthefirstbyteischosenbythetransmitterforthefirstpacket,whichisflaggedSYN.Thisnumbercanbearbitrary,andshouldinfactbeunpredictabletodefendagainst TCPsequencepredictionattacks.
Acknowledgements(Acks)aresentwithasequencenumberbythereceiverofdatatotellthesenderthatdatahasbeenreceivedtothespecifiedbyte.Acksdonotimplythatthedatahasbeendeliveredtotheapplication.Theymerelysignifythatitisnowthereceiver'sresponsibilitytodeliverthedata.
Reliabilityisachievedbythesenderdetectinglostdataandretransmittingit.TCPusestwoprimarytechniquestoidentifyloss.Retransmissiontimeout(abbreviatedasRTO)andduplicatecumulativeacknowledgements(DupAcks).
Dupack-basedretransmission[edit]
Ifasinglepacket(saypacket100)inastreamislost,thenthereceivercannotacknowledgepacketsabove100becauseitusescumulativeacks.Hencethereceiveracknowledgespacket99againonthereceiptofanotherdatapacket.Thisduplicateacknowledgementisusedasasignalforpacketloss.Thatis,ifthesenderreceivesthreeduplicateacknowledgements,itretransmitsthelastunacknowledgedpacket.Athresholdofthreeisusedbecausethenetworkmayreorderpacketscausingduplicateacknowledgements.Thisthresholdhasbeendemonstratedtoavoidspuriousretransmissionsduetoreordering.[16] Sometimes selectiveacknowledgements (SACKs)areusedtogivemoreexplicitfeedbackonwhichpacketshavebeenreceived.ThisgreatlyimprovesTCP'sabilitytoretransmittherightpackets.
Timeout-basedretransmission[edit]
Wheneverapacketissent,thesendersetsatimerthatisaconservativeestimateofwhenthatpacketwillbeacked.Ifthesenderdoesnotreceiveanackbythen,ittransmitsthatpacketagain.Thetimerisreseteverytimethesenderreceivesanacknowledgement.Thismeansthattheretransmittimerfiresonlywhenthesenderhasreceived no acknowledgementforalongtime.Typicallythetimervalueissetto {\displaystyle{\text{smoothedRTT}}+\max(G,4\times{\text{RTTvariation}})} where {\displaystyleG} istheclockgranularity.[17] Further,incasearetransmittimerhasfiredandstillnoacknowledgementisreceived,thenexttimerissettotwicethepreviousvalue(uptoacertainthreshold).Amongotherthings,thishelpsdefendagainsta man-in-the-middledenialofserviceattack thattriestofoolthesenderintomakingsomanyretransmissionsthatthereceiverisoverwhelmed.
Ifthesenderinfersthatdatahasbeenlostinthenetworkusingoneofthetwotechniquesdescribedabove,it retransmits thedata.
Errordetection[edit]
Sequencenumbersallowreceiverstodiscardduplicatepacketsandproperlysequencereorderedpackets.Acknowledgmentsallowsenderstodeterminewhentoretransmitlostpackets.
Toassurecorrectnessachecksumfieldisincluded;see checksumcomputation sectionfordetailsonchecksumming.TheTCPchecksumisaweakcheckbymodernstandards.DataLinkLayerswithhighbiterrorratesmayrequireadditionallinkerrorcorrection/detectioncapabilities.Theweakchecksumispartiallycompensatedforbythecommonuseofa CRC orbetterintegritycheckat layer2,belowbothTCPandIP,suchasisusedin PPP orthe Ethernet frame.However,thisdoesnotmeanthatthe16-bitTCPchecksumisredundant:remarkably,introductionoferrorsinpacketsbetweenCRC-protectedhopsiscommon,butthe end-to-end 16-bitTCPchecksumcatchesmostofthesesimpleerrors.[18] Thisisthe end-to-endprinciple atwork.
Flowcontrol[edit]
TCPusesanend-to-end flowcontrol protocoltoavoidhavingthesendersenddatatoofastfortheTCPreceivertoreceiveandprocessitreliably.Havingamechanismforflowcontrolisessentialinanenvironmentwheremachinesofdiversenetworkspeedscommunicate.Forexample,ifaPCsendsdatatoasmartphonethatisslowlyprocessingreceiveddata,thesmartphonemustregulatethedataflowsoasnottobeoverwhelmed.[3]
TCPusesa slidingwindow flowcontrolprotocol.IneachTCPsegment,thereceiverspecifiesinthe receivewindow fieldtheamountofadditionallyreceiveddata(inbytes)thatitiswillingtobufferfortheconnection.Thesendinghostcansendonlyuptothatamountofdatabeforeitmustwaitforanacknowledgmentandwindowupdatefromthereceivinghost.
Whenareceiveradvertisesawindowsizeof0,thesenderstopssendingdataandstartsthe persisttimer.ThepersisttimerisusedtoprotectTCPfroma deadlock situationthatcouldariseifasubsequentwindowsizeupdatefromthereceiverislost,andthesendercannotsendmoredatauntilreceivinganewwindowsizeupdatefromthereceiver.Whenthepersisttimerexpires,theTCPsenderattemptsrecoverybysendingasmallpacketsothatthereceiverrespondsbysendinganotheracknowledgementcontainingthenewwindowsize.
Ifareceiverisprocessingincomingdatainsmallincrements,itmayrepeatedlyadvertiseasmallreceivewindow.Thisisreferredtoasthe sillywindowsyndrome,sinceitisinefficienttosendonlyafewbytesofdatainaTCPsegment,giventherelativelylargeoverheadoftheTCPheader.
Congestioncontrol[edit]
ThefinalmainaspectofTCPis congestioncontrol.TCPusesanumberofmechanismstoachievehighperformanceandavoid congestioncollapse,wherenetworkperformancecanfallbyseveralordersofmagnitude.Thesemechanismscontroltherateofdataenteringthenetwork,keepingthedataflowbelowaratethatwouldtriggercollapse.Theyalsoyieldanapproximately max-minfair allocationbetweenflows.
Acknowledgmentsfordatasent,orlackofacknowledgments,areusedbysenderstoinfernetworkconditionsbetweentheTCPsenderandreceiver.Coupledwithtimers,TCPsendersandreceiverscanalterthebehavioroftheflowofdata.Thisismoregenerallyreferredtoascongestioncontroland/ornetworkcongestionavoidance.
ModernimplementationsofTCPcontainfourintertwinedalgorithms: slow-start, congestionavoidance, fastretransmit,and fastrecovery (RFC5681).
Inaddition,sendersemploya retransmissiontimeout (RTO)thatisbasedontheestimated round-triptime (orRTT)betweenthesenderandreceiver,aswellasthevarianceinthisroundtriptime.Thebehaviorofthistimerisspecifiedin RFC6298.TherearesubtletiesintheestimationofRTT.Forexample,sendersmustbecarefulwhencalculatingRTTsamplesforretransmittedpackets;typicallytheyuse Karn'sAlgorithm orTCPtimestamps(see RFC1323).TheseindividualRTTsamplesarethenaveragedovertimetocreateaSmoothedRoundTripTime(SRTT)using Jacobson'salgorithm.ThisSRTTvalueiswhatisfinallyusedastheround-triptimeestimate.
EnhancingTCPtoreliablyhandleloss,minimizeerrors,managecongestionandgofastinveryhigh-speedenvironmentsareongoingareasofresearchandstandardsdevelopment.Asaresult,thereareanumberof TCPcongestionavoidancealgorithm variations.
Maximumsegmentsize[edit]
The maximumsegmentsize (MSS)isthelargestamountofdata,specifiedinbytes,thatTCPiswillingtoreceiveinasinglesegment.Forbestperformance,theMSSshouldbesetsmallenoughtoavoid IPfragmentation,whichcanleadtopacketlossandexcessiveretransmissions.Totrytoaccomplishthis,typicallytheMSSisannouncedbyeachsideusingtheMSSoptionwhentheTCPconnectionisestablished,inwhichcaseitisderivedfromthe maximumtransmissionunit (MTU)sizeofthe datalinklayer ofthenetworkstowhichthesenderandreceiveraredirectlyattached.Furthermore,TCPsenderscanuse pathMTUdiscovery toinfertheminimumMTUalongthenetworkpathbetweenthesenderandreceiver,andusethistodynamicallyadjusttheMSStoavoidIPfragmentationwithinthenetwork.
MSSannouncementisalsooftencalled"MSSnegotiation".Strictlyspeaking,theMSSisnot"negotiated"betweentheoriginatorandthereceiver,becausethatwouldimplythatbothoriginatorandreceiverwillnegotiateandagreeuponasingle,unifiedMSSthatappliestoallcommunicationinbothdirectionsoftheconnection.Infact,twocompletelyindependentvaluesofMSSarepermittedforthetwodirectionsofdataflowinaTCPconnection.[19] Thissituationmayarise,forexample,ifoneofthedevicesparticipatinginaconnectionhasanextremelylimitedamountofmemoryreserved(perhapsevensmallerthantheoveralldiscoveredPathMTU)forprocessingincomingTCPsegments.
Selectiveacknowledgments[edit]
RelyingpurelyonthecumulativeacknowledgmentschemeemployedbytheoriginalTCPprotocolcanleadtoinefficiencieswhenpacketsarelost.Forexample,suppose10,000bytesaresentin10differentTCPpackets,andthefirstpacketislostduringtransmission.Inapurecumulativeacknowledgmentprotocol,thereceivercannotsaythatitreceivedbytes1,000to9,999successfully,butfailedtoreceivethefirstpacket,containingbytes0to999.Thusthesendermaythenhavetoresendall10,000bytes.
ToalleviatethisissueTCPemploysthe selectiveacknowledgment(SACK) option,definedin RFC2018,which allowsthereceivertoacknowledgediscontinuousblocksofpacketswhichwerereceivedcorrectly,inadditiontothesequencenumberofthelastcontiguousbytereceivedsuccessively,asinthebasicTCPacknowledgment.Theacknowledgementcanspecifyanumberof SACKblocks,whereeachSACKblockisconveyedbythestartingandendingsequencenumbersofacontiguousrangethatthereceivercorrectlyreceived.Intheexampleabove,thereceiverwouldsendSACKwithsequencenumbers1000and9999.Thesenderwouldaccordinglyretransmitonlythefirstpacket(bytes0to999).
ATCPsendercaninterpretanout-of-orderpacketdeliveryasalostpacket.Ifitdoesso,theTCPsenderwillretransmitthepacketprevioustotheout-of-orderpacketandslowitsdatadeliveryrateforthatconnection.Theduplicate-SACKoption,anextensiontotheSACKoptionthatwasdefinedin RFC2883,solvesthisproblem.TheTCPreceiversendsaD-ACKtoindicatethatnopacketswerelost,andtheTCPsendercanthenreinstatethehighertransmission-rate.
TheSACKoptionisnotmandatory,andcomesintooperationonlyifbothpartiessupportit.Thisisnegotiatedwhenaconnectionisestablished.SACKusestheoptionalpartoftheTCPheader(see TCPsegmentstructure fordetails).TheuseofSACKhasbecomewidespread—allpopularTCPstackssupportit.Selectiveacknowledgmentisalsousedin StreamControlTransmissionProtocol (SCTP).
Windowscaling[edit]
Mainarticle: TCPwindowscaleoption
Formoreefficientuseofhigh-bandwidthnetworks,alargerTCPwindowsizemaybeused.TheTCPwindowsizefieldcontrolstheflowofdataanditsvalueislimitedtobetween2and65,535bytes.
Sincethesizefieldcannotbeexpanded,ascalingfactorisused.The TCPwindowscaleoption,asdefinedin RFC1323,isanoptionusedtoincreasethemaximumwindowsizefrom65,535bytesto1gigabyte.Scalinguptolargerwindowsizesisapartofwhatisnecessaryfor TCPtuning.
ThewindowscaleoptionisusedonlyduringtheTCP3-wayhandshake.Thewindowscalevaluerepresentsthenumberofbitstoleft-shiftthe16-bitwindowsizefield.Thewindowscalevaluecanbesetfrom0(noshift)to14foreachdirectionindependently.BothsidesmustsendtheoptionintheirSYNsegmentstoenablewindowscalingineitherdirection.
Someroutersandpacketfirewallsrewritethewindowscalingfactorduringatransmission.ThiscausessendingandreceivingsidestoassumedifferentTCPwindowsizes.Theresultisnon-stabletrafficthatmaybeveryslow.Theproblemisvisibleonsomesitesbehindadefectiverouter.[20]
TCPtimestamps[edit]
TCPtimestamps,definedin RFC1323,canhelpTCPdetermineinwhichorderpacketsweresent.TCPtimestampsarenotnormallyalignedtothesystemclockandstartatsomerandomvalue.Manyoperatingsystemswillincrementthetimestampforeveryelapsedmillisecond;howevertheRFConlystatesthattheticksshouldbeproportional.
Therearetwotimestampfields:
a4-bytesendertimestampvalue(mytimestamp)
a4-byteechoreplytimestampvalue(themostrecenttimestampreceivedfromyou).
TCPtimestampsareusedinanalgorithmknownas ProtectionAgainstWrappedSequence numbers,or PAWS (see RFC1323 fordetails).PAWSisusedwhenthereceivewindowcrossesthesequencenumberwraparoundboundary.Inthecasewhereapacketwaspotentiallyretransmitteditanswersthequestion:"Isthissequencenumberinthefirst4 GBorthesecond?"Andthetimestampisusedtobreakthetie.
Also,theEifeldetectionalgorithm(RFC3522)usesTCPtimestampstodetermineifretransmissionsareoccurringbecausepacketsarelostorsimplyoutoforder.
RecentStatisticsshowthatthelevelofTimestampadoptionhasstagnated,at~40%,owingtoWindowsserverdroppingsupportsinceWindowsServer2008 [21].
Out-of-banddata[edit]
Itispossibletointerruptorabortthequeuedstreaminsteadofwaitingforthestreamtofinish.Thisisdonebyspecifyingthedataas urgent.Thistellsthereceivingprogramtoprocessitimmediately,alongwiththerestoftheurgentdata.Whenfinished,TCPinformstheapplicationandresumesbacktothestreamqueue.AnexampleiswhenTCPisusedforaremoteloginsession,theusercansendakeyboardsequencethatinterruptsorabortstheprogramattheotherend.Thesesignalsaremostoftenneededwhenaprogramontheremotemachinefailstooperatecorrectly.Thesignalsmustbesentwithoutwaitingfortheprogramtofinishitscurrenttransfer.[3]
TCPOOBdatawasnotdesignedforthemodernInternet.The urgent pointeronlyalterstheprocessingontheremotehostanddoesn'texpediteanyprocessingonthenetworkitself.Whenitgetstotheremotehosttherearetwoslightlydifferentinterpretationsoftheprotocol,whichmeansonlysinglebytesofOOBdataarereliable.Thisisassumingitisreliableatallasitisoneoftheleastcommonlyusedprotocolelementsandtendstobepoorlyimplemented. [22][23]
Forcingdatadelivery[edit]
Normally,TCPwaitsfor200 msforafullpacketofdatatosend(Nagle'sAlgorithm triestogroupsmallmessagesintoasinglepacket).Thiswaitcreatessmall,butpotentiallyseriousdelaysifrepeatedconstantlyduringafiletransfer.Forexample,atypicalsendblockwouldbe4 KB,atypicalMSSis1460,so2packetsgooutona10 Mbit/sethernettaking~1.2 mseachfollowedbyathirdcarryingtheremaining1176aftera197 mspausebecauseTCPiswaitingforafullbuffer.
Inthecaseoftelnet,eachuserkeystrokeisechoedbackbytheserverbeforetheusercanseeitonthescreen.Thisdelaywouldbecomeveryannoying.
Settingthe socket option TCP_NODELAY overridesthedefault200 mssenddelay.Applicationprogramsusethissocketoptiontoforceoutputtobesentafterwritingacharacterorlineofcharacters.
TheRFCdefinesthe PSH pushbitas"amessagetothereceivingTCPstacktosendthisdataimmediatelyuptothereceivingapplication".[3] Thereisnowaytoindicateorcontrolitin userspace using Berkeleysockets anditiscontrolledby protocolstack only.[24]
